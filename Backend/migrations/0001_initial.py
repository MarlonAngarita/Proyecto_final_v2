# Generated by Django 5.0.6 on 2025-06-17 02:55

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Avatares',
            fields=[
                ('id_avatar', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_avatar', models.CharField(max_length=100)),
                ('imagen_url', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Avatar',
                'verbose_name_plural': 'Avatares',
                'db_table': 'avatares',
            },
        ),
        migrations.CreateModel(
            name='Cursos',
            fields=[
                ('id_curso', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_curso', models.CharField(max_length=100)),
                ('descripcion_curso', models.TextField()),
                ('fecha_inicio', models.DateField()),
                ('fecha_fin', models.DateField()),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name': 'Curso',
                'verbose_name_plural': 'Cursos',
                'db_table': 'cursos',
            },
        ),
        migrations.CreateModel(
            name='Desafios',
            fields=[
                ('id_desafio', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_desafio', models.CharField(max_length=100)),
                ('descripcion', models.TextField()),
                ('recompensa', models.IntegerField(blank=True, null=True)),
                ('dificultad', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Desafío',
                'verbose_name_plural': 'Desafíos',
                'db_table': 'desafios',
            },
        ),
        migrations.CreateModel(
            name='Medallas',
            fields=[
                ('id_medalla', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_medalla', models.CharField(max_length=100)),
                ('descripcion', models.TextField()),
                ('icono_url', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Medalla',
                'verbose_name_plural': 'Medallas',
                'db_table': 'medallas',
            },
        ),
        migrations.CreateModel(
            name='Niveles',
            fields=[
                ('id_nivel', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_nivel', models.CharField(max_length=100)),
                ('requisitos', models.TextField()),
            ],
            options={
                'verbose_name': 'Nivel',
                'verbose_name_plural': 'Niveles',
                'db_table': 'niveles',
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('id_rol', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_rol', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'Rol',
                'verbose_name_plural': 'Roles',
                'db_table': 'roles',
            },
        ),
        migrations.CreateModel(
            name='TipoDocumento',
            fields=[
                ('id_tipo_documento', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_tipo', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'Tipo de Documento',
                'verbose_name_plural': 'Tipos de Documento',
                'db_table': 'tipo_documento',
            },
        ),
        migrations.CreateModel(
            name='Modulos',
            fields=[
                ('id_modulo', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_modulo', models.CharField(max_length=100)),
                ('contenido_modulo', models.TextField()),
                ('id_curso', models.ForeignKey(db_column='id_curso', on_delete=django.db.models.deletion.CASCADE, to='Backend.cursos')),
            ],
            options={
                'verbose_name': 'Módulo',
                'verbose_name_plural': 'Módulos',
                'db_table': 'modulos',
            },
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id_quiz', models.AutoField(primary_key=True, serialize=False)),
                ('pregunta', models.TextField()),
                ('opcion_a', models.CharField(max_length=255)),
                ('opcion_b', models.CharField(max_length=255)),
                ('opcion_c', models.CharField(max_length=255)),
                ('opcion_d', models.CharField(max_length=255)),
                ('respuesta_correcta', models.CharField(max_length=255)),
                ('id_modulo', models.ForeignKey(db_column='id_modulo', on_delete=django.db.models.deletion.CASCADE, to='Backend.modulos')),
            ],
            options={
                'verbose_name': 'Quiz',
                'verbose_name_plural': 'Quizzes',
                'db_table': 'quiz',
            },
        ),
        migrations.CreateModel(
            name='Usuarios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='correo electrónico')),
                ('nombre', models.CharField(blank=True, max_length=100, verbose_name='nombre completo')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('id_avatar', models.ForeignKey(blank=True, db_column='id_avatar', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='usuarios_con_este_avatar', to='Backend.avatares')),
                ('id_rol', models.ForeignKey(blank=True, db_column='id_rol', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='usuarios_con_este_rol', to='Backend.roles')),
                ('id_tipo_documento', models.ForeignKey(blank=True, db_column='id_tipo_documento', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='usuarios_con_este_tipo_doc', to='Backend.tipodocumento')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'db_table': 'usuarios',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='RachasUsuario',
            fields=[
                ('id_racha', models.AutoField(primary_key=True, serialize=False)),
                ('dias_consecutivos', models.IntegerField(default=0)),
                ('ultima_actividad', models.DateTimeField(blank=True, null=True)),
                ('id_usuario', models.OneToOneField(db_column='id_usuario', on_delete=django.db.models.deletion.CASCADE, related_name='racha', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Racha de Usuario',
                'verbose_name_plural': 'Rachas de Usuario',
                'db_table': 'rachas_usuario',
            },
        ),
        migrations.CreateModel(
            name='Gamificacion',
            fields=[
                ('id_gamificacion', models.AutoField(primary_key=True, serialize=False)),
                ('tipo_recompensa', models.CharField(max_length=50)),
                ('cantidad', models.IntegerField(blank=True, null=True)),
                ('fecha_obtenida', models.DateTimeField(auto_now_add=True)),
                ('id_usuario', models.ForeignKey(db_column='id_usuario', on_delete=django.db.models.deletion.CASCADE, related_name='recompensas_gamificacion', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Recompensa de Gamificación',
                'verbose_name_plural': 'Recompensas de Gamificación',
                'db_table': 'gamificacion',
            },
        ),
        migrations.CreateModel(
            name='Foro',
            fields=[
                ('id_foro', models.AutoField(primary_key=True, serialize=False)),
                ('titulo', models.CharField(max_length=255)),
                ('contenido', models.TextField()),
                ('fecha_publicacion', models.DateTimeField(auto_now_add=True)),
                ('id_usuario', models.ForeignKey(db_column='id_usuario', on_delete=django.db.models.deletion.CASCADE, related_name='publicaciones_foro', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Publicación de Foro',
                'verbose_name_plural': 'Publicaciones de Foro',
                'db_table': 'foro',
            },
        ),
        migrations.AddField(
            model_name='cursos',
            name='id_profesor',
            field=models.ForeignKey(blank=True, db_column='id_profesor', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cursos_impartidos', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CursosNivel',
            fields=[
                ('id_curso_nivel', models.AutoField(primary_key=True, serialize=False)),
                ('id_curso', models.ForeignKey(db_column='id_curso', on_delete=django.db.models.deletion.CASCADE, to='Backend.cursos')),
                ('id_nivel', models.ForeignKey(db_column='id_nivel', on_delete=django.db.models.deletion.CASCADE, to='Backend.niveles')),
            ],
            options={
                'verbose_name': 'Nivel de Curso',
                'verbose_name_plural': 'Niveles de Curso',
                'db_table': 'cursos_nivel',
                'unique_together': {('id_curso', 'id_nivel')},
            },
        ),
        migrations.CreateModel(
            name='ProgresoUsuario',
            fields=[
                ('id_progreso', models.AutoField(primary_key=True, serialize=False)),
                ('completado', models.BooleanField(default=False)),
                ('fecha_completado', models.DateTimeField(blank=True, null=True)),
                ('id_modulo', models.ForeignKey(db_column='id_modulo', on_delete=django.db.models.deletion.CASCADE, to='Backend.modulos')),
                ('id_usuario', models.ForeignKey(db_column='id_usuario', on_delete=django.db.models.deletion.CASCADE, related_name='progreso_modulos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Progreso de Usuario',
                'verbose_name_plural': 'Progresos de Usuario',
                'db_table': 'progreso_usuario',
                'unique_together': {('id_usuario', 'id_modulo')},
            },
        ),
        migrations.CreateModel(
            name='NivelesUsuario',
            fields=[
                ('id_nivel_usuario', models.AutoField(primary_key=True, serialize=False)),
                ('fecha_asignacion', models.DateTimeField(auto_now_add=True)),
                ('id_nivel', models.ForeignKey(db_column='id_nivel', on_delete=django.db.models.deletion.CASCADE, to='Backend.niveles')),
                ('id_usuario', models.ForeignKey(db_column='id_usuario', on_delete=django.db.models.deletion.CASCADE, related_name='niveles_alcanzados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Nivel de Usuario',
                'verbose_name_plural': 'Niveles de Usuario',
                'db_table': 'niveles_usuario',
                'unique_together': {('id_usuario', 'id_nivel')},
            },
        ),
        migrations.CreateModel(
            name='MedallasUsuario',
            fields=[
                ('id_medalla_usuario', models.AutoField(primary_key=True, serialize=False)),
                ('fecha_obtencion', models.DateTimeField(auto_now_add=True)),
                ('id_medalla', models.ForeignKey(db_column='id_medalla', on_delete=django.db.models.deletion.CASCADE, to='Backend.medallas')),
                ('id_usuario', models.ForeignKey(db_column='id_usuario', on_delete=django.db.models.deletion.CASCADE, related_name='medallas_obtenidas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Medalla de Usuario',
                'verbose_name_plural': 'Medallas de Usuario',
                'db_table': 'medallas_usuario',
                'unique_together': {('id_usuario', 'id_medalla')},
            },
        ),
        migrations.CreateModel(
            name='DesafiosUsuario',
            fields=[
                ('id_desafio_usuario', models.AutoField(primary_key=True, serialize=False)),
                ('completado', models.BooleanField(default=False)),
                ('fecha_completado', models.DateTimeField(blank=True, null=True)),
                ('id_desafio', models.ForeignKey(db_column='id_desafio', on_delete=django.db.models.deletion.CASCADE, to='Backend.desafios')),
                ('id_usuario', models.ForeignKey(db_column='id_usuario', on_delete=django.db.models.deletion.CASCADE, related_name='desafios_completados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Desafío de Usuario',
                'verbose_name_plural': 'Desafíos de Usuario',
                'db_table': 'desafios_usuario',
                'unique_together': {('id_usuario', 'id_desafio')},
            },
        ),
    ]
